(defcfg
  ;; ** For Linux **
  input  (device-file "/dev/input/by-path/platform-i8042-serio-0-event-kbd")
  output (uinput-sink "KMonad output")

  ;; ** For Windows **
  ;; input  (low-level-hook)
  ;; output (send-event-sink)

  ;; ** For MacOS **
  ;; input  (iokit-name "my-keyboard-product-string")
  ;; output (kext)

  fallthrough true
)

(defsrc
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12  del
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rctl left down up    right
)

(defalias
  ;; xtn (tap-next KeyKpLeftParen lsft)   ;; Shift that does 'x' on tap
  xtn (tap-hold-next 200 KeyKpLeftParen lsft)            ;; Long delay for easier testing
  ;; escaps (tap-next KeyEsc lctl)   ;; Shift that does 'x' on tap
  escaps (tap-hold-next 200 KeyEsc lctl)   ;; Shift that does 'x' on tap
  ;; ltab
)

(deflayer qwerty
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12  del
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  @escaps a    s    d    f    g    h    j    k    l    ;    '    ret
  @xtn z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rctl left down up    right
)

;; ( defalias
;;   ;;
;;   tls (layer-delay 500 tabbed)
;;   mtb (tap-hold-next 200 KeyTab @tls)
;;     )


(deflayer tabbed
  _    _       _       _      _       _       _       _       _      _      _    _    _    _
  _    _       _       _      _       _       _       _       _      _      _    _    _    _
  _    _       _       _      _       _       _       _       _      _      _    _    _    _
  caps _       _       _      _       _       left    down    up     right  _    _    _
  _    _       _       _      _       _       _       _       _      _      _    _
  _    _       _              _               _       _       _      _      _    _
)
