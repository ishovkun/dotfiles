// Place your key bindings in this file to override the defaults
[
{ "key": "ctrl+s", "command": "workbench.action.files.save" },
{ "key": "alt+shift+h", "command": "workbench.action.decreaseViewWidth", "when": "!isMac" },
{ "key": "cmd+shift+h", "command": "workbench.action.decreaseViewWidth", "when": "isMac" },
{ "key": "alt+shift+l", "command": "workbench.action.increaseViewWidth", "when": "!isMac" },
{ "key": "cmd+shift+l", "command": "workbench.action.increaseViewWidth", "when": "isMac" },
{ "key": "alt+shift+j", "command": "workbench.action.decreaseViewHeight", "when": "!isMac" },
{ "key": "cmd+shift+j", "command": "workbench.action.decreaseViewHeight", "when": "isMac && !panelFocus" },
{ "key": "cmd+shift+j", "command": "workbench.action.increaseViewHeight", "when": "isMac && panelFocus" },
{ "key": "alt+shift+k", "command": "workbench.action.increaseViewHeight", "when": "!isMac" },
{ "key": "cmd+shift+k", "command": "workbench.action.increaseViewHeight", "when": "isMac && !panelFocus" },
{ "key": "cmd+shift+k", "command": "workbench.action.decreaseViewHeight", "when": "isMac && panelFocus" },

{ "key": "ctrl+shift+m", "command": "workbench.action.toggleMenuBar" },
{ "key": "ctrl+\\", "command": "workbench.action.toggleSidebarVisibility" },

{ "key": "alt+`", "command": "workbench.action.togglePanel", "when": "!isMac"},
{ "key": "cmd+`", "command": "workbench.action.togglePanel", "when": "isMac"},

{ "key": "alt+backspace", "command": "workbench.action.closeActiveEditor", "when": "editorTextFocus && !inCommandsPicker"},
{ "key": "alt+x", "command": "workbench.action.showCommands"},
{ "key": "cmd+x", "command": "workbench.action.showCommands", "when": "isMac"},
// tab switching
{ "key": "alt+m", "command": "workbench.action.nextEditorInGroup", "when": "!isMac && !panelFocus"  },
{ "key": "cmd+m", "command": "workbench.action.nextEditorInGroup", "when": "isMac && !panelFocus"  },
{ "key": "alt+,", "command": "workbench.action.previousEditorInGroup", "when": "!isMac && !panelFocus" },
{ "key": "cmd+,", "command": "workbench.action.previousEditorInGroup", "when": "isMac && !panelFocus" },
{ "key": "alt+m", "command": "workbench.action.nextPanelView", "when": "!isMac && panelFocus"  },
{ "key": "cmd+m", "command": "workbench.action.nextPanelView", "when": "isMac && panelFocus"  },
{ "key": "alt+,", "command": "workbench.action.previousPanelView", "when": "!isMac && panelFocus"  },
{ "key": "cmd+,", "command": "workbench.action.previousPanelView", "when": "isMac && panelFocus"  },

{ "key": "j", "command": "list.focusDown", "when": "panelFocus && activePanel == 'workbench.panel.markers'"  },
{ "key": "k", "command": "list.focusUp", "when": "panelFocus && activePanel == 'workbench.panel.markers'"  },
{ "key": "h", "command": "list.collapse", "when": "panelFocus && activePanel == 'workbench.panel.markers'"  },
{ "key": "shift+h", "command": "list.collapseAll", "when": "panelFocus && activePanel == 'workbench.panel.markers'"  },
{ "key": "l", "command": "list.expand", "when": "panelFocus && activePanel == 'workbench.panel.markers'"  },

{ "key": "j", "command": "cursorDown", "when": "panelFocus && activePanel == 'workbench.panel.output'"  },
{ "key": "k", "command": "cursorUp", "when": "panelFocus && activePanel == 'workbench.panel.output'"  },
{ "key": "l", "command": "cursorRight", "when": "panelFocus && activePanel == 'workbench.panel.output'"  },
{ "key": "h", "command": "cursorLeft", "when": "panelFocus && activePanel == 'workbench.panel.output'"  },
{ "key": "w", "command": "cursorWordEndRight", "when": "panelFocus && activePanel == 'workbench.panel.output'"  },
{ "key": "e", "command": "cursorWordEndRight", "when": "panelFocus && activePanel == 'workbench.panel.output'"  },
{ "key": "b", "command": "cursorWordEndLeft", "when": "panelFocus && activePanel == 'workbench.panel.output'"  },
{ "key": "y", "command": "copyLineDown", "when": "panelFocus && activePanel == 'workbench.panel.output'"  },
{ "key": "shift+g", "command": "cursorBottom", "when": "panelFocus && activePanel == 'workbench.panel.output'"  },
{ "key": "g", "command": "cursorTop", "when": "panelFocus && activePanel == 'workbench.panel.output'"  },
// scrolling
{ "key": "ctrl+j", "command": "workbench.action.quickOpenSelectNext", "when": "inCommandsPicker || inputFocus"},
{ "key": "ctrl+j", "command": "selectNextSuggestion", "when": "suggestWidgetVisible && editorFocus"},
{ "key": "ctrl+k", "command": "workbench.action.quickOpenSelectPrevious", "when": "inCommandsPicker || inputFocus"},
{ "key": "ctrl+k", "command": "selectPrevSuggestion", "when": "suggestWidgetVisible && editorFocus"},

{ "key": "alt+j", "command": "workbench.action.navigateDown", "when": "!isMac" },
{ "key": "cmd+j", "command": "workbench.action.navigateDown", "when": "isMac" },

{ "key": "alt+k", "command": "workbench.action.navigateUp", "when": "!isMac" },
{ "key": "cmd+k", "command": "workbench.action.navigateUp", "when": "isMac" },

{ "key": "alt+h", "command": "workbench.action.navigateLeft", "when": "!isMac" },
{ "key": "cmd+h", "command": "workbench.action.navigateLeft", "when": "isMac" },

{ "key": "alt+l", "command": "workbench.action.navigateRight", "when": "!isMac" },
{ "key": "cmd+l", "command": "workbench.action.navigateRight", "when": "isMac" },

{ "key": "alt+a", "command": "vscode-neovim.send", "args": "<a-a>", "when": "!isMac && editorTextFocus && neovim.init" },
{ "key": "alt+b", "command": "vscode-neovim.send", "args": "<a-b>", "when": "!isMac && editorTextFocus && neovim.init" },
{ "key": "alt+c", "command": "vscode-neovim.send", "args": "<a-c>", "when": "!isMac && editorTextFocus && neovim.init" },
{ "key": "alt+d", "command": "vscode-neovim.send", "args": "<a-d>", "when": "!isMac && editorTextFocus && neovim.init" },
{ "key": "alt+e", "command": "vscode-neovim.send", "args": "<a-e>", "when": "!isMac && editorTextFocus && neovim.init" },
{ "key": "alt+f", "command": "vscode-neovim.send", "args": "<a-f>", "when": "!isMac && editorTextFocus && neovim.init" },
{ "key": "alt+g", "command": "vscode-neovim.send", "args": "<a-g>", "when": "!isMac && editorTextFocus && neovim.init" },
{ "key": "alt+i", "command": "vscode-neovim.send", "args": "<a-i>", "when": "!isMac && editorTextFocus && neovim.init" },
{ "key": "alt+n", "command": "vscode-neovim.send", "args": "<a-n>", "when": "!isMac && editorTextFocus && neovim.init" },
{ "key": "alt+o", "command": "vscode-neovim.send", "args": "<a-o>", "when": "!isMac && editorTextFocus && neovim.init" },
{ "key": "alt+p", "command": "vscode-neovim.send", "args": "<a-p>", "when": "!isMac && editorTextFocus && neovim.init" },
{ "key": "alt+q", "command": "vscode-neovim.send", "args": "<a-q>", "when": "!isMac && editorTextFocus && neovim.init" },
{ "key": "alt+r", "command": "vscode-neovim.send", "args": "<a-r>", "when": "!isMac && editorTextFocus && neovim.init" },
{ "key": "alt+s", "command": "vscode-neovim.send", "args": "<a-s>", "when": "!isMac && editorTextFocus && neovim.init" },
{ "key": "alt+t", "command": "vscode-neovim.send", "args": "<a-t>", "when": "!isMac && editorTextFocus && neovim.init" },
{ "key": "alt+u", "command": "vscode-neovim.send", "args": "<a-u>", "when": "!isMac && editorTextFocus && neovim.init" },
{ "key": "alt+v", "command": "vscode-neovim.send", "args": "<a-v>", "when": "!isMac && editorTextFocus && neovim.init" },
{ "key": "alt+y", "command": "vscode-neovim.send", "args": "<a-y>", "when": "!isMac && editorTextFocus && neovim.init" },
{ "key": "alt+z", "command": "vscode-neovim.send", "args": "<a-z>", "when": "!isMac && editorTextFocus && neovim.init" },
// remap ctrl-based keybindings
{ "key": "ctrl+e", "command": "vscode-neovim.ctrl-u", "args": "<C-e>", "when": "editorTextFocus && neovim.init && neovim.mode != insert" },
//{ "key": "ctrl+e", "command": "editorScroll", "args": { "to": "up", "by": "halfPage", "revealCursor": true, "value": 1 },  "when": "editorTextFocus && neovim.init && neovim.mode == insert" },
//{ "key": "ctrl+d", "command": "editorScroll", "args": { "to": "down", "by": "halfPage", "revealCursor": true, "value": 1 },  "when": "editorTextFocus && neovim.init && neovim.mode == insert" },
{ "key": "ctrl+e", "command": "cursorEnd", "when": "editorTextFocus && neovim.init && neovim.mode == insert" },
{ "key": "ctrl+j", "command": "vscode-neovim.ctrl-e", "when": "editorTextFocus && neovim.init && !suggestWidgetVisible" },
{ "key": "ctrl+k", "command": "vscode-neovim.ctrl-y", "when": "editorTextFocus && neovim.init && !suggestWidgetVisible" },
{ "key": "ctrl+w", "command": "vscode-neovim.send", "args": "<C-w>", "when": "editorTextFocus && neovim.init && !terminalFocus" },
{ "key": "ctrl+w", "command": "workbench.action.terminal.sendSequence", "args": { "text": "\u0017" }, "when": "terminalFocus" },
// alt+p
{ "key": "cmd+p", "command": "workbench.action.terminal.sendSequence", "args": { "text": "\u0010" }, "when": "terminalFocus && isMac" },
{ "key": "alt+p", "command": "workbench.action.terminal.sendSequence", "args": { "text": "\u0010" }, "when": "terminalFocus && !isMac" },
// alt+e
{ "key": "cmd+e", "command": "workbench.action.terminal.sendSequence", "args": { "text": "\u001be" }, "when": "terminalFocus && isMac" },
{ "key": "alt+e", "command": "workbench.action.terminal.sendSequence", "args": { "text": "\u001be" }, "when": "terminalFocus && !isMac" },

{ "key": "ctrl+y", "command": "editor.action.clipboardPasteAction", "when": "editorTextFocus && neovim.init && neovim.mode == insert" },

//// LEADER /////
{ "key": "space", "command": "vscode-neovim.send", "args": "<Space>", "when": "editorTextFocus && neovim.init && neovim.mode != insert" },
{ "key": "alt+;", "command": "vscode-neovim.send", "args": "gcA", "when": "!isMac && editorTextFocus && neovim.init && neovim.mode == normal" },
{ "key": "cmd+;", "command": "vscode-neovim.send", "args": "gcA", "when": "isMac && editorTextFocus && neovim.init && neovim.mode == normal" },
{ "key": "ctrl+enter", "command": "cmake.build", "when": "editorTextFocus && cmake:enableFullFeatureSet && !cmake:hideBuildCommand" },
{ "key": "ctrl+c ctrl+k", "command": "cmake.stop", "when": "editorTextFocus && cmake:enableFullFeatureSet && !cmake:hideBuildCommand" },
{ "key": "ctrl+c ctrl+c", "command": "cmake.outline.stopAll", "when": "editorTextFocus && cmake:enableFullFeatureSet && !cmake:hideBuildCommand" },
{ "key": "x", "command": "magit.discard-at-point", "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/" },
{ "key": "k", "command": "-magit.discard-at-point", "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/" },
{ "key": "tab", "command": "magit.toggle-fold", "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/" },
{ "key": "p", "command": "magit.pushing", "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/" },
{ "key": "ctrl+e", "command": "-workbench.action.quickOpen" },
// vsnetrw file manager
{ "key": "q", "command": "vsnetrw.close", "when": "editorTextFocus && editorLangId == vsnetrw && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/" },
{ "key": "l", "command": "vsnetrw.openAtCursor", "when": "editorTextFocus && editorLangId == vsnetrw && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/" },
{ "key": "h", "command": "vsnetrw.openParent", "when": "editorTextFocus && editorLangId == vsnetrw && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/" },
{ "key": "shift+=", "command": "vsnetrw.createDir", "when": "editorTextFocus && editorLangId == vsnetrw && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/" },
{ "key": "x", "command": "vsnetrw.delete", "when": "editorTextFocus && editorLangId == vsnetrw && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/" },
/// when nothing is open
{ "key": "space space", "command": "workbench.action.quickOpen", "when": "inputFocus == false" },
{ "key": "space f k", "command": "workbench.action.openGlobalKeybindingsFile", "when": "inputFocus == false" },
{ "key": "space p p", "command": "projectManager.listProjects", "when": "inputFocus == false" },
{ "key": "space p a", "command": "projectManager.editProjects", "when": "inputFocus == false" },

]